---
const params = Astro.url.searchParams;

const state = params.get("state");
const code = params.get("code");

let spotifyToken = Astro.cookies.get("token")?.value;
console.log(state, code, spotifyToken);

if (!state && spotifyToken === undefined) {
	// redirect to login page
	return Astro.redirect(`/`);
}

if (spotifyToken === undefined) {
	const response = await fetch("https://accounts.spotify.com/api/token", {
		method: "POST",
		headers: {
			"Content-Type": "application/x-www-form-urlencoded",
			Authorization: `Basic ${Buffer.from(`${import.meta.env.SPOTIFY_CLIENT_ID}:${import.meta.env.SPOTIFY_CLIENT_SECRET}`).toString("base64")}`,
		},
		body: new URLSearchParams({
			code: code!,
			redirect_uri: "http://localhost:8888/view",
			grant_type: "authorization_code",
		}),
	});

	const data = await response.json();

	if (!data.access_token) {
		// redirect to login page
		return Astro.redirect(`/`);
	}

	spotifyToken = data.access_token;

	// save token to local storage
	Astro.cookies.set("token", spotifyToken!, {
		httpOnly: true,
		secure: true,
	});
}

// get the users top tracks
const topTracks = await fetch(
	`https://api.spotify.com/v1/me/top/tracks?limit=10`,
	{
		headers: {
			Authorization: `Bearer ${spotifyToken}`,
		},
	}
).then((response) => response.json());

console.log(topTracks);
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />

		<script is:inline src="https://aframe.io/releases/1.6.0/aframe.min.js"
		></script>

		<title>Spotify View</title>
	</head>
	<body>
		<a-scene>
			{
				topTracks.items.map((track) => (
					<a-box
						key={track.id}
						position={`${track.track_number - 1} 0.5 -3`}
						rotation="0 45 0"
						color="#4CC3D9"
					/>
				))
			}
			<a-sky color="#ECECEC"></a-sky>
		</a-scene>
	</body>
</html>
